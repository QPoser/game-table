version: '3'

services:
    db:
        container_name: db
        image: mysql:8
        ports:
            - 33061:3306
        restart: always
        volumes:
            - ./docker/data/db:/var/lib/mysql:delegated,rw
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_DATABASE: app
            MYSQL_USER: app
            MYSQL_PASSWORD: secret
        networks:
            - app

    rabbitmq:
        container_name: rabbitmq
        hostname: rabbitmq
        image: rabbitmq:3.8-management-alpine
        environment:
            RABBITMQ_USER: guest
            RABBITMQ_PASSWORD: guest
            RABBITMQ_VHOST: /
        volumes:
            - ./docker/data/rabbitmq:/var/lib/rabbitmq
        ports:
            - 15673:15672
            - 5673:5672
        networks:
            - app

    websockets:
        image: golang:1.14-alpine
        volumes:
            - ./go-server:/go/src/websockets
        working_dir: /go/src/websockets
        command: go run main.go
        environment:
            JWT_SECRET_KEY: ${JWT_SECRET_KEY}
        ports:
            - 8888:8888
        networks:
            - app
        depends_on:
            - rabbitmq
        restart: on-failure

    nginx:
        container_name: nginx
        image: nginx:latest
        ports:
            - 8000:80
        restart: always
        environment:
            - WEB_DIR=${PWD}/public
            - PHP_FPM=host.docker.internal:9000
        volumes:
            - ./public:${PWD}/public:cached
            - ./docker/nginx/default.dev.conf:/default.dev.conf.template
        networks:
            - app
        command: /bin/bash -c "envsubst '$${WEB_DIR} $${PHP_FPM}' < /default.dev.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

    front:
        container_name: game-table-front
        build:
            context: front
            dockerfile: Dockerfile
        ports:
            - 3001:3000
        environment:
            - CHOKIDAR_USEPOLLING=true
        networks:
            - app

    supervisord:
        container_name: supervisord
        build: docker/supervisord/
        restart: always
        privileged: true
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./var/logs/supervisord:/var/log/supervisor
        networks:
            - app
        depends_on:
            - db
            - rabbitmq
            - nginx

networks:
    app:
        driver: bridge

volumes:
    data:
        driver: local
