{% extends 'base.html.twig' %}

{% block title %}Game {{ game.title }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ absolute_url(asset('css/chat.css')) }}">
{% endblock %}

{% block body %}
        <div class="container message-box">
            <div class="row">
                <div class="col-md-3 stats">
                    <div class="stats-main">
                        <h3 class="stats-main-title badge badge-primary">Game {{ game.title }}</h3>
                        <p>
                            <span class="badge badge-white">
                                <i class="fa fa-user"></i> {{ game.gamePlayersCount }} / {{ game.slots }}
                            </span>
                        </p>
                    </div>

                    <div class="users-list overflow-auto">
                        <hr>
                        {% for player in game.gamePlayers %}
                            <p><i class="fa fa-user"></i> {{ player.player.username }}</p>
                            <hr>
                        {% endfor %}
                    </div>

                    <div class="stats-description">
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis deserunt doloremque eum minima odio quod quos. Architecto cumque dolorum facere fuga ipsa iure laudantium nisi, pariatur quibusdam repellat voluptas voluptatem?
                    </div>
                </div>
                <div class="col-md-9 messages">
                    <div class="chat" id="chat">
                        {% for message in messages %}
                            <div class="message {{ message.user.id == app.user.id ? 'personal-message' : 'receieved-message' }}">
                            <h4>{{ message.user.username }} <span class="badge {{ message.user.id == app.user.id ? 'badge-primary' : 'badge-danger' }}">Role</span></h4>
                            <p> {{ message.content }} </p>
                            </div>
                        {% endfor %}
                    </div>

                    <div class="chat-send-box input-group mt-auto">
                        <textarea name="send-box" id="send-box" class="form-control"></textarea>
                        <div class="input-group-prepend">
                            <button class="send-message-btn btn btn-primary"><i class="fab fa-telegram-plane"></i></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    <script>
        var userId = {{ app.user.id }};
        var userUsername = "{{ app.user.username }}";
        var gameId = {{ game.id }};
        var loaded = false;
        var offset = 60;

        sockets();
        chatSend();
        scrolls();

        function sockets() {
            socket.on('chat', function (data) {
                var msgBody = JSON.parse(data);

                var messageClass = msgBody.User.Id == userId ? 'personal-message' : 'receieved-message';
                var badgeClass = msgBody.User.Id == userId ? 'badge-primary' : 'badge-danger';

                $('.chat').append('<div class="message ' + messageClass + '">\n' +
                    '<h4>' + msgBody.User.Username + ' <span class="badge ' + badgeClass + '">Role</span></h4>\n' +
                    '<p>' + msgBody.Content + '</p>\n' +
                    '</div>'
                );

                $("#chat").animate({scrollTop: $("#chat")[0].scrollHeight}, 100);
            });
        }

        function chatSend() {
            $('#send-box').on('keydown', function(e) {
                if (e.which == 13 || e.key == 13) {
                    $.ajax({
                        method: "POST",
                        url: "/api/chat/" + {{ game.id }} + "/message",
                        // The key needs to match your method's input parameter (case-sensitive).
                        data: JSON.stringify({"content": $('#send-box').val()}),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        headers: {
                            "Authorization": "Bearer " + token,
                        },
                        success: function(data){},
                        failure: function(errMsg) {
                            console.log(errMsg);
                        }
                    });
                    $('#send-box').val('');
                    e.preventDefault();
                }
            });

            $('.send-message-btn').on('click', function () {
                $.ajax({
                    method: "POST",
                    url: "/api/chat/" + {{ game.id }} + "/message",
                    // The key needs to match your method's input parameter (case-sensitive).
                    data: JSON.stringify({"content": $('#send-box').val()}),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    headers: {
                        "Authorization": "Bearer " + token,
                    },
                    success: function(data){},
                    failure: function(errMsg) {
                        console.log(errMsg);
                    }
                });
                $('#send-box').val('');
            });
        }

        function scrolls() {
            $("#chat").animate({ scrollTop: $("#chat")[0].scrollHeight}, 100);

            setTimeout(function () {
                $("#chat").on('scroll', function (pos) {
                    if (!loaded && $(this).scrollTop() < 3000) {
                        loaded = true;

                        $.ajax({
                            type: "GET",
                            url: "/api/chat/" + {{ game.id }} + "/messages",
                            // The key needs to match your method's input parameter (case-sensitive).
                            data: {"offset": offset, "limit": 60},
                            headers: {
                                "Authorization": "Bearer " + token,
                            },
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function(data) {
                                console.log(data);

                                $.each(data.data, function (i, elem) {
                                    var messageClass = elem.user.id == userId ? 'personal-message' : 'receieved-message';
                                    var badgeClass = elem.user.id == userId ? 'badge-primary' : 'badge-danger';

                                    $("#chat").prepend('<div class="message ' + messageClass + '">\n' +
                                        '<h4>' + elem.user.username + ' <span class="badge ' + badgeClass + '">Role</span></h4>\n' +
                                        '<p>' + elem.content + '</p>\n' +
                                        '</div>'
                                    );
                                });

                                if (data.data.length > 0) {
                                    loaded = false;
                                    offset += 60;
                                }
                            },
                            failure: function(errMsg) {
                                console.log(errMsg);
                            }
                        });
                    }
                });
            }, 200);
        }

    </script>
{% endblock %}
